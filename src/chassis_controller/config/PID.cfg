#!/usr/bin/env python
PACKAGE = "chassis_controller"  

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# 动态重配置参数的命名空间需与控制器一致：/controller/chassis_controller
# 参数名称需与YAML中的结构匹配：pid_<wheel>_/p → 对应参数名 pid_<wheel>_p

for wheel in ['front_left', 'front_right', 'back_left', 'back_right']:
    # 参数名改为 pid_<wheel>_p，与YAML中的 pid_<wheel>_/p 对应
    gen.add(f"pid_{wheel}_p", double_t, 0, f"Proportional gain for {wheel}", 9.98, 0.0, 20.0)  # 与YAML默认值一致
    gen.add(f"pid_{wheel}_i", double_t, 0, f"Integral gain for {wheel}", 0.01, 0.0, 1.0)
    gen.add(f"pid_{wheel}_d", double_t, 0, f"Derivative gain for {wheel}", 0.0005, 0.0, 1.0)

# 积分限幅和抗积分饱和参数（与YAML或控制器逻辑对应）
gen.add("pid_i_max", double_t, 0, "i max limit", 0.001, -500.0, 500.0)
gen.add("pid_i_min", double_t, 0, "i min limit", -0.001, -500.0, 500.0)
gen.add("pid_antiwindup", bool_t, 0, "Enable anti-windup", True)

# 生成参数时，指定命名空间为控制器的命名空间：controller/chassis_controller
exit(gen.generate(PACKAGE, "controller/chassis_controller", "PID"))  # 第二个参数改为控制器的命名空间
